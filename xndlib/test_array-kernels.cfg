#
#  Unittests for arrays.
#
#  Created: July 2018
#  Author: Pearu Peterson
#

[MODULE test_array]
typemaps = 
	long: int64
includes = 
	test_array.h
include_dirs = 
	examplelib
sources =
	examplelib/test_array.c
kinds = C
#Xnd

ellipses = none
#, ... 
#, ...
#ellipses = ..., var...
#debug=True

[KERNEL test_array_range_input]
kinds = C, Xnd
prototypes = 
	long test_array_range(long n, long* a);
description = takes input that copy is changed to range(n)
input_arguments = a(n)
hide_arguments = n = len(a)

[KERNEL test_array_ranges_input]
kinds = Xnd
prototypes_Fortran = 
	long test_array_ranges(long n, long* a);
prototypes = 
	long test_array_ranges(long n, long* a);
description = takes input that copy is changed to <row index>*10+range(n)
input_arguments = a(n,n)
hide_arguments = n = len(a)
fortran_arguments_Fortran = a


[KERNEL test_array_range_inplace]
kinds = C, Xnd
prototypes = 
	long test_array_range(long n, long* a);
description = takes input that is changed to range(n)
inplace_arguments = a(n)
hide_arguments = n = len(a)

[KERNEL test_array_range_input_output]
kinds = C, Xnd
prototypes = 
	long test_array_range(long n, long* a);
description = takes input that copy is changed to range(n)
input_arguments = a(n)
hide_arguments = n = len(a)
output_arguments = a

[KERNEL test_array_range_output]
kinds = C, Fortran, Xnd
prototypes = 
	long test_array_range(long n, long* a);
description = returns range(n)
input_arguments = n
output_arguments = a(n)
