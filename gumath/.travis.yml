sudo: required

language: python
python:
  - 3.6


matrix:
  include:
    - compiler: gcc
      before_install:
        - pip install numpy
      before_script:
        - git clone https://github.com/plures/ndtypes.git
        - git clone https://github.com/plures/xnd.git
        - cd ndtypes
        - python3 setup.py install --local=$PWD/../python
        - cd ../xnd
        - python3 setup.py install --local=$PWD/../python
        - cd ..
      script:
        - python3 setup.py build
        - python3 setup.py test

    - language: objective-c
      os: osx
      compiler: clang
      before_install:
        - brew install python3
        - python3 -m pip install numpy numba
      before_script:
        - export CC=clang
        - git clone https://github.com/plures/ndtypes.git
        - git clone https://github.com/plures/xnd.git
        - cd ndtypes
        - python3 setup.py install --local=$PWD/../python
        - cd ../xnd
        - python3 setup.py install --local=$PWD/../python
        - cd ..
      script:
        - python3 setup.py build
        - python3 setup.py test

    - compiler: conda
      install:
        - cd ..
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
        - bash Miniconda3-latest-Linux-x86_64.sh -b
        - export PATH=$HOME/miniconda3/bin:$PATH
        - conda update --yes conda
        - conda install --yes conda-build=3.3.0
        - conda install --yes anaconda-client
        - conda install --yes numpy
        - conda install --yes numba
        - conda install --yes -c xnd/label/dev ndtypes
        - conda install --yes -c xnd/label/dev xnd
      script:
        - cd gumath
        - git fetch --unshallow
        - conda build .conda/libgumath -c xnd/label/dev
        - conda build .conda/gumath -c xnd/label/dev
        - export LIBGUMATH=`conda build --output .conda/libgumath -c xnd/label/dev`
        - export GUMATH=`conda build --output .conda/gumath -c xnd/label/dev`
        - if test X"$TRAVIS_BRANCH" = X"master" && test X"$TRAVIS_PULL_REQUEST" = X"false"; then anaconda --token $ANACONDA_TOKEN upload $LIBGUMATH --user xnd --label dev; fi
        - if test X"$TRAVIS_BRANCH" = X"master" && test X"$TRAVIS_PULL_REQUEST" = X"false"; then anaconda --token $ANACONDA_TOKEN upload $GUMATH --user xnd --label dev; fi

    - language: objective-c
      os: osx
      compiler: conda
      install:
        - cd ..
        - wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh
        - bash Miniconda3-latest-MacOSX-x86_64.sh -b
        - export PATH=$HOME/miniconda3/bin:$PATH
        - export CC=clang
        - conda update --yes conda
        - conda install --yes conda-build=3.3.0
        - conda install --yes anaconda-client
        - conda install --yes numpy
        - conda install --yes numba
        - conda install --yes -c xnd/label/dev ndtypes
        - conda install --yes -c xnd/label/dev xnd
      script:
        - cd gumath
        - git fetch --unshallow
        - conda build .conda/libgumath -c xnd/label/dev
        - conda build .conda/gumath -c xnd/label/dev
        - export LIBGUMATH=`conda build --output .conda/libgumath -c xnd/label/dev`
        - export GUMATH=`conda build --output .conda/gumath -c xnd/label/dev`
        - if test X"$TRAVIS_BRANCH" = X"master" && test X"$TRAVIS_PULL_REQUEST" = X"false"; then anaconda --token $ANACONDA_TOKEN upload $LIBGUMATH --user xnd --label dev; fi
        - if test X"$TRAVIS_BRANCH" = X"master" && test X"$TRAVIS_PULL_REQUEST" = X"false"; then anaconda --token $ANACONDA_TOKEN upload $GUMATH --user xnd --label dev; fi

env:
  global:
    - secure: "S2uQndFi5ZbdZ7e82sbgzH+exDMWSu/ogD9kbBuavYFxkSdXKs9PgvlSNGM7d+wQCbkIfgD/D2U+Xpn4fc/1KrqwkiqSsnD4/tWWtklbdgTIoop4UqISdCVxlK36m+FPNMrJ2A4VkFfFVwwaCsJeVzCfYTp8tXNXL2rYk/yZB9NfJO0YS3Y2Ua2zC5FEsxuZadpVsLDyopk5OIcv09EYKmjFIaPTYv8xb4ruESJ4G1guVITDeoOp8OzQKqaC99dtB5NPWftvXRSPo2kjSdeXdjTU34z7Lp9WTTt5ua42ZeIltDIxKOQsEY0RIbSKGOMlxnzm3pkjWoYvg2cfn/CDY30PluJfgktzmjbqHqLdoUmTtzQafDmctpGMOEvAySeDyD26MFex76CYJLmSs5ZHQgFN6qgPCTgJlFqi6Z+t+ptxIoSQTodCknSQNOOq/rFfSN+8AMddqBEs8QVOxV9cqq9nj473P0ZTqiT8HI3fLPd2rPdLBpxY0HujU9RDrxTCJWpP4/qZsopLg/F7K2cFs37H90KwuWNdalE03LxLaLd0ooMUOFMnTxQ66j7OD/tcWnz+wIlCK4h5+3rKOmBo8w6KvbzYTaXoqbBQynmhCo5CCEwgLaR0X61hY6xvkoxZQQRfR1Gde01PUugrgwfkjw70S2Fz4ZkXspQJnxeGDkw="
